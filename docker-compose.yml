version: "3"

services:
  nginx:
    build:
      context: .
      dockerfile: nginx-Dockerfile
    container_name: nginx
    ports:
      - "80:80"
      - "5000:5000"
      - "5001:5001"
    expose:
      - "80"
      - "5000"
      - "5001"
    networks:
      - transcendence_network
    depends_on:
      - "front"
      - "back"

  front:
    build:
      context: .
      dockerfile: react-Dockerfile
    container_name: front_react
    restart: always
    image: react
    ports:
      - "3000:3000"
    expose:
      - "3000"
    environment:
      REACT_APP_CLIENT_ID: "${CLIENT_ID}"
      REACT_APP_REDIRECT_URI: "${REDIRECT_URI}"
      REACT_APP_BASE_IP: ${BASE_IP}
    volumes:
      - ./src/front:/app
      - /app/node_modules
    networks:
      - transcendence_network
    depends_on:
      - "back"

  back:
    build:
      context: .
      dockerfile: nest-Dockerfile
    container_name: back_nest
    restart: always
    expose:
      - "4000"
      - "4001"
      - "4002"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      CLIENT_ID: "${CLIENT_ID}"
      CLIENT_SECRET: "${CLIENT_SECRET}"
      REDIRECT_URI: "${REDIRECT_URI}"
      BASE_IP: ${BASE_IP}
      TWO_FA_AUTH_APP_NAME: ${TWO_FA_AUTH_APP_NAME}
      JWT_ACCESS_TOKEN_SECRET: ${JWT_ACCESS_TOKEN_SECRET}
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME}
    volumes:
      - ./src/back:/app
      - /app/node_modules
      - ./src/back/imgs:/app/imgs
    networks:
      - transcendence_network
    depends_on:
      - "db"

  db:
    image: postgres:latest
    container_name: database
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PG_DATA: /var/lib/postgresql/data
    networks:
      - transcendence_network
    env_file:
      - .env

networks:
  transcendence_network:
    driver: bridge
