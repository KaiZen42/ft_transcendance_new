version: "3"

services:
#   nginx:
#     build: 
#       context: .
#       dockerfile: nginx-Dockerfile
#     container_name: nginx
#     restart: always
#     image: nginx
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#         - ./src/front/public:/www
#     depends_on:
#       - front
#     networks:
#       - transcendence_network
  
  front:
    build:
      context: .
      dockerfile: react-Dockerfile
    container_name: front_react
    restart: always
    image: react
    ports:
      - "8080:3000"
    environment:
      REACT_APP_CLIENT_ID: "${CLIENT_ID}"
      REACT_APP_REDIRECT_URI: "${REDIRECT_URI}"
      REACT_APP_BASE_IP: ${BASE_IP}
    volumes:
        - ./src/front:/app
        - /app/node_modules
    networks:
      - transcendence_network
    
  back:
    build:
      context: .
      dockerfile: nest-Dockerfile
    container_name: back_nest
    restart: always
    ports:
      - "3000:3001"
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      CLIENT_ID: "${CLIENT_ID}"
      CLIENT_SECRET: "${CLIENT_SECRET}"
      REDIRECT_URI: "${REDIRECT_URI}"
      BASE_IP: ${BASE_IP}
      TWO_FA_AUTH_APP_NAME: ${TWO_FA_AUTH_APP_NAME}
      JWT_ACCESS_TOKEN_SECRET: ${JWT_ACCESS_TOKEN_SECRET}
      JWT_ACCESS_TOKEN_EXPIRATION_TIME: ${JWT_ACCESS_TOKEN_EXPIRATION_TIME}
    volumes:
      - ./src/back:/app
      - /app/node_modules
      - ./src/back/imgs:/app/imgs
    networks:
      - transcendence_network
    depends_on:
      - db
    # env_file:
    #   - .env

  db:
    image: postgres:latest
    container_name: database
    restart: always
    ports: 
      - 5432:5432
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PG_DATA: /var/lib/postgresql/data
    networks:
      - transcendence_network
    #volumes:
      #- ./src/database:/var/run/postgresql
      # - ./src/database/create_database.sql:/docker-entrypoint-initdb.d/create_database.sql
    env_file:
      - .env

  # pgadmin:
  #   container_name: pgadmin4
  #   image: dpage/pgadmin4
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - transcendence_network

# volumes:
  # database:


networks:
  transcendence_network:
    driver: bridge
